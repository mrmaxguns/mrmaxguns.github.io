/*
 * This file contains styling for the homepage of my blog. The homepage is unique
 * in that it has lots of custom styles not found anywhere else in the site. This
 * Is because the homepage is the most important page of my site, and a pretty
 * homepage makes the reader interested to learn more.
 *
 * Copyright Â© 2021 Maxim Rebguns
 *
 * This file is part of The Blog of Maxim Rebguns.
 *
 * The source code of this website is free software: you can redistribute
 * it and/or modify it under the terms of the GNU Affero General Public
 * License as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * The source code of this website is distributed in the hope that it
 * will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
 * the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with the source code for this website.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

@import "theme";
@import "variables";

/*
 * The title container.
 */
#title {
  /* Flexbox model for centering the div inside. */
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;

  /* A round gradient as the background. */
  background: rgb(105,0,93);
  background: radial-gradient(circle, rgba(105,0,93,1) 0%, rgba(36,0,80,1) 100%);
}

.title-text {
  font: bold 40px "Heebo", sans-serif;
  color: $theme-light;
  text-align: center;
}

.subtitle-text {
  font: normal 20px "DM Mono", monospace;
  color: $theme-light;
  text-align: center;
}

@media only screen and (min-width: $media-small) {
  .title-text { font-size: 50px; }
  .subtitle-text { font-size: 30px; }
}
@media only screen and (min-width: $media-medium) {
  .title-text { font-size: 60px; }
  .subtitle-text { font-size: 40px; }
}
@media only screen and (min-width: $media-large) {
  .title-text { font-size: 70px; }
}

/*
 * The navigation container.
 */

/* The navbar fade animation on hover. */
@keyframes nav-item-fade {
  from { background-color: $theme-dark; }
  to   { background-color: $theme-dark-accent; };
}
/* The same fade animation but for the currently active
   nav item. */
@keyframes nav-active-item-fade {
  from { background-color: $theme-light; }
  to   { background-color: $theme-light-accent; };
}

#navigation {
  background-color: $theme-dark;
}

ul.nav-bar {
  /* Disable some default CSS list styling. */
  margin: 0;
  padding: 0;
  overflow: hidden;
  list-style-type: none;

  background-color: $theme-dark;
}

ul.nav-bar {
  /* `float: none` makes the nav elements go one after the other,
     which is ideal for small devices. */
  li { float: none; }

  /* For the closed navbar (default) all elements except for the
     toggle should be hidden. */
  li:not(:first-child) { display: none; }

  /* Rule moved after this block as it's supposed to be
     ul.nav-bar.nav-open li, not ul.nav-bar .nav-open li */
  /* .nav-open li { display: block; }*/

  a {
    display: block;
    padding: 10px 25px;

    font: 300 20px 'Mukta', sans-serif;
    color: $theme-light;
    background-color: $theme-dark;
    text-decoration: none;
  }

  a:focus,
  a.nav-active:focus { background-color: $theme-dark-accent; }

  /* Animate a nav item to change color on hover. */
  a:hover {
    animation-name: nav-item-fade;
    animation-duration: 1s;
    /* Keep the colors set by the animation after it's done. */
    animation-fill-mode: forwards;
  }

  a.nav-active {
    color: $theme-dark;
    background-color: $theme-light;
  }

  /* Override the default nav animation. */
  a.nav-active:hover {
    animation-name: nav-active-item-fade;
    animation-duration: 0.5s;
    animation-fill-mode: forwards;
  }

  li.nav-toggle { text-align: center; }
}

/* If the nav is open, show all nav items. */
ul.nav-bar.nav-open li { display: block; }

@media only screen and (min-width: $media-medium) {
  ul.nav-bar {
    /* On larger devices we want each nav button to go one after
       the other starting on the left. */
    li {
      display: block;
      float: left;
    }

    a {
      font-size: 25px;
      border-radius: 5px;
    }

    /* Hide the toggle on larger devices. */
    li.nav-toggle { display: none; }
  }
}

/*
 * Classes for the Skills, Hobbies, Projects and Contact
 * containers as well as the footer.
 */

.topic-container { padding: 30px 10%; }
@media only screen and (min-width: $media-medium) {
  .topic-container { padding: 40px 15%; }
}
@media only screen and (min-width: $media-large) {
  .topic-container { padding: 50px 20%; }
}

/* Topic container typography. */
.topic-container {
  h2, h3, h4 { margin-top: 20px; }
  h2 {
    margin-bottom: 20px;
    font: 500 40px 'Work Sans', sans-serif;
    text-align: center;
  }
  h3 {
    margin-bottom: 15px;
    font: 500 30px 'Work Sans', sans-serif;
  }
  h4 {
    margin-bottom: 15px;
    font: 500 25px 'Work Sans', sans-serif;
  }

  li,
  p { font: normal 18px 'Lato', sans-serif; }
  p { margin: 15px 0; }

  ul {
    padding-left: 30px;
    margin-left: 0;
  }
}
@media only screen and (min-width: $media-small) {
  .topic-container {
    h2 { font-size: 50px; }
    h3 { font-size: 40px; }
    h4 { font-size: 30px; }
  }
}
@media only screen and (min-width: $media-medium) {
  .topic-container {
    h2 { font-size: 60px; }
    h3 { font-size: 45px; }
    h4 { font-size: 35px; }
  }
}
@media only screen and (min-width: $media-large) {
  .topic-container {
    h2 { font-size: 80px; }
    li,
    p { font-size: 22px; }
  }
}

/*
 * Container-specific styling.
 */

#skills,
#projects,
#footer {
  color: $theme-light-accent;
  background-color: $theme-primary;
}

#skills,
#projects,
#footer {
  a { color: $theme-light; }
  a:hover,
  a:focus { color: #BFBFBF; }
}

#hobbies,
#contact {
  color: $theme-light;
  background-color: $theme-dark;
}

#hobbies,
#contact {
  a { color: $theme-light-accent; }
  a:hover,
  a:focus { color: #B2C3FF; }
}

/* Multiple projects can be side-by-side on larger devices. */
.projects-container {
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;

  /* We use a negative margin here to remove the margin from
     the internal divs around the border of the element to simulate
     gutters. This will be changed when browsers support gutters
     for flex items.

     Relevant document:
     https://developer.mozilla.org/en-US/docs/Web/...
     ...CSS/CSS_Flexible_Box_Layout/...
     ...Mastering_Wrapping_of_Flex_Items#creating_gutters_between_items */
  margin: -20px;
}

.projects-container article {
  flex: auto;
  /* Margins simulate gutters between flex items. See the comment
     above. */
  margin: 20px;
  width: 400px;
}
